.TH "ROBOT_STATUS" 3 "화 1월 27 2015" "Version Ver 1.0.0" "Test" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ROBOT_STATUS \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <robot_status\&.h>\fP
.PP
CDialog를(을) 상속했습니다\&.
.SS "Public 타입"

.in +1c
.ti -1c
.RI "enum { \fBIDD\fP = IDD_STATUS_DIALOG }"
.br
.in -1c
.SS "Public 멤버 함수"

.in +1c
.ti -1c
.RI "\fBROBOT_STATUS\fP (CWnd *pParent=NULL)"
.br
.ti -1c
.RI "virtual \fB~ROBOT_STATUS\fP ()"
.br
.ti -1c
.RI "void \fBAddStatus\fP (int num, CString str2add)"
.br
.ti -1c
.RI "void \fBInitStatus\fP (int num, CString str2show)"
.br
.ti -1c
.RI "void \fBAddStatus\fP (int num, char *char2add)"
.br
.ti -1c
.RI "void \fBInitStatus\fP (int num, char *char2show)"
.br
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.ti -1c
.RI "afx_msg void \fBOnBnClickedCheckShowStatus\fP ()"
.br
.ti -1c
.RI "afx_msg void \fBOnEnChangeEdit1\fP ()"
.br
.ti -1c
.RI "virtual BOOL \fBOnInitDialog\fP ()"
.br
.in -1c
.SS "Public 속성"

.in +1c
.ti -1c
.RI "\fBROBOT_OBJECTS\fP * \fBstatus_hander\fP"
.br
.ti -1c
.RI "CButton \fBm_bShowStatus\fP"
.br
.ti -1c
.RI "CEdit \fBm_eStatus1\fP"
.br
.ti -1c
.RI "CEdit \fBm_eStatus2\fP"
.br
.ti -1c
.RI "CString \fBm_sStatusString1\fP"
.br
.ti -1c
.RI "CString \fBm_sStatusString2\fP"
.br
.in -1c
.SS "Protected 멤버 함수"

.in +1c
.ti -1c
.RI "virtual void \fBDoDataExchange\fP (CDataExchange *pDX)"
.br
.in -1c
.SH "상세한 설명"
.PP 
robot_status\&.h 파일의 10 번째 라인에서 정의되었습니다\&.
.SH "멤버 열거형 문서화"
.PP 
.SS "anonymous enum"

.PP
\fB열거형 멤버\fP
.in +1c
.TP
\fB\fIIDD \fP\fP
.PP
robot_status\&.h 파일의 39 번째 라인에서 정의되었습니다\&.
.PP
.nf
39 { IDD = IDD_STATUS_DIALOG };
.fi
.SH "생성자 & 소멸자 문서화"
.PP 
.SS "ROBOT_STATUS::ROBOT_STATUS (CWnd * pParent = \fCNULL\fP)"

.PP
robot_status\&.cpp 파일의 15 번째 라인에서 정의되었습니다\&.
.PP
.nf
16     : CDialog(ROBOT_STATUS::IDD, pParent)
17 {
18     
19 }
.fi
.SS "ROBOT_STATUS::~ROBOT_STATUS ()\fC [virtual]\fP"

.PP
robot_status\&.cpp 파일의 21 번째 라인에서 정의되었습니다\&.
.PP
.nf
22 {
23 }
.fi
.SH "멤버 함수 문서화"
.PP 
.SS "void ROBOT_STATUS::AddStatus (int num, CString str2add)"

.PP
robot_status\&.cpp 파일의 103 번째 라인에서 정의되었습니다\&.
.PP
.nf
104 {
105     switch(num)
106     {
107     case 1:
108         m_sStatusString1 += str2add;
109         //str2add\&.Format("\r\n");m_sStatusString1 += str2add;
110 
111         m_eStatus1\&.SetWindowText(m_sStatusString1);
112         m_eStatus1\&.LineScroll(m_eStatus1\&.GetLineCount());
113         break;
114     case 2:
115         m_sStatusString2 += str2add;
116         //str2add\&.Format("\r\n");m_sStatusString1 += str2add;
117 
118         m_eStatus2\&.SetWindowText(m_sStatusString2);
119         m_eStatus2\&.LineScroll(m_eStatus2\&.GetLineCount());
120         break;
121     }   
122 }
.fi
.SS "void ROBOT_STATUS::AddStatus (int num, char * char2add)"

.PP
robot_status\&.cpp 파일의 88 번째 라인에서 정의되었습니다\&.
.PP
.nf
89 {
90     CString str;
91     str\&.Format("%s",char2add);
92     AddStatus(num, str);
93 }
.fi
.SS "void ROBOT_STATUS::DoDataExchange (CDataExchange * pDX)\fC [protected]\fP, \fC [virtual]\fP"

.PP
robot_status\&.cpp 파일의 25 번째 라인에서 정의되었습니다\&.
.PP
.nf
26 {
27     CDialog::DoDataExchange(pDX);
28     DDX_Control(pDX, IDC_CHECK_SHOW_STATUS, m_bShowStatus);
29     DDX_Control(pDX, IDC_EDIT1, m_eStatus1);
30     DDX_Control(pDX, IDC_EDIT2, m_eStatus2);
31 }
.fi
.SS "void ROBOT_STATUS::InitStatus (int num, CString str2show)"

.PP
robot_status\&.cpp 파일의 125 번째 라인에서 정의되었습니다\&.
.PP
.nf
126 {
127     switch(num)
128     {
129     case 1:
130         m_sStatusString1\&.Format("");
131         m_sStatusString1 = str2show;
132 
133         m_eStatus1\&.SetWindowText(m_sStatusString1);
134         m_eStatus1\&.LineScroll(m_eStatus1\&.GetLineCount());
135         break;
136     case 2:
137         m_sStatusString2\&.Format("");
138         m_sStatusString2 = str2show;
139 
140         m_eStatus2\&.SetWindowText(m_sStatusString2);
141         m_eStatus2\&.LineScroll(m_eStatus2\&.GetLineCount());
142         break;
143     }   
144     
145 }
.fi
.SS "void ROBOT_STATUS::InitStatus (int num, char * char2show)"

.PP
robot_status\&.cpp 파일의 96 번째 라인에서 정의되었습니다\&.
.PP
.nf
97 {
98     CString str;
99     str\&.Format("%s",char2show);
100     InitStatus(num, str);
101 }
.fi
.SS "void ROBOT_STATUS::OnBnClickedCheckShowStatus ()"

.PP
robot_status\&.cpp 파일의 47 번째 라인에서 정의되었습니다\&.
.PP
.nf
48 {
49     // TODO: 여기에 컨트롤 알림 처리기 코드를 추가합니다\&.
50     if(m_bShowStatus\&.GetCheck())
51     {
52         TRACE("Show status \r\n");
53     }
54     else
55     {
56         
57         TRACE("Set Robot \r\n");
58     }
59 }
.fi
.SS "void ROBOT_STATUS::OnEnChangeEdit1 ()"

.PP
robot_status\&.cpp 파일의 61 번째 라인에서 정의되었습니다\&.
.PP
.nf
62 {
63     // TODO:  RICHEDIT 컨트롤인 경우, 이 컨트롤은
64     // CDialog::OnInitDialog() 함수를 재지정하고  마스크에 OR 연산하여 설정된
65     // ENM_CHANGE 플래그를 지정하여 CRichEditCtrl()\&.SetEventMask()를 호출해야만
66     // 해당 알림 메시지를 보냅니다\&.
67 
68     // TODO:  여기에 컨트롤 알림 처리기 코드를 추가합니다\&.
69     //
70     
71 
72 
73 }
.fi
.SS "BOOL ROBOT_STATUS::OnInitDialog ()\fC [virtual]\fP"

.PP
robot_status\&.cpp 파일의 75 번째 라인에서 정의되었습니다\&.
.PP
.nf
76 {
77     CDialog::OnInitDialog();
78 
79     // TODO:  여기에 추가 초기화 작업을 추가합니다\&.
80 
81     m_sStatusString1\&.Format("");
82     m_sStatusString2\&.Format("");
83 
84 
85     return TRUE;  // return TRUE unless you set the focus to a control
86     // 예외: OCX 속성 페이지는 FALSE를 반환해야 합니다\&.
87 }
.fi
.SS "void ROBOT_STATUS::Update ()"

.PP
robot_status\&.cpp 파일의 41 번째 라인에서 정의되었습니다\&.
.PP
.nf
42 {//status를 update한다\&. 타이머에서 계속 호출
43     SetDlgItemInt(IDC_EDIT_ROBOT_NUM, status_hander->robot_count);
44     
45 }
.fi
.SH "멤버 데이타 문서화"
.PP 
.SS "CButton ROBOT_STATUS::m_bShowStatus"

.PP
robot_status\&.h 파일의 46 번째 라인에서 정의되었습니다\&.
.SS "CEdit ROBOT_STATUS::m_eStatus1"

.PP
robot_status\&.h 파일의 48 번째 라인에서 정의되었습니다\&.
.SS "CEdit ROBOT_STATUS::m_eStatus2"

.PP
robot_status\&.h 파일의 49 번째 라인에서 정의되었습니다\&.
.SS "CString ROBOT_STATUS::m_sStatusString1"

.PP
robot_status\&.h 파일의 51 번째 라인에서 정의되었습니다\&.
.SS "CString ROBOT_STATUS::m_sStatusString2"

.PP
robot_status\&.h 파일의 52 번째 라인에서 정의되었습니다\&.
.SS "\fBROBOT_OBJECTS\fP* ROBOT_STATUS::status_hander"

.PP
robot_status\&.h 파일의 19 번째 라인에서 정의되었습니다\&.

.SH "작성자"
.PP 
소스 코드로부터 Test를 위해 Doxygen에 의해 자동으로 생성됨\&.
