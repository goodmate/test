.TH "D:/RobotSimulator/test/robot_society/robot society beta/Common/mm.h" 3 "화 1월 27 2015" "Version Ver 1.0.0" "Test" \" -*- nroff -*-
.ad l
.nh
.SH NAME
D:/RobotSimulator/test/robot_society/robot society beta/Common/mm.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <math\&.h>\fP
.br

.SS "매크로"

.in +1c
.ti -1c
.RI "#define \fBM_PI\fP   3\&.14159265358979323846"
.br
.ti -1c
.RI "#define \fB_RAD2DEG\fP   (180\&./\fBM_PI\fP)"
.br
.ti -1c
.RI "#define \fB_DEG2RAD\fP   (\fBM_PI\fP/180\&.)"
.br
.in -1c
.SS "함수"

.in +1c
.ti -1c
.RI "double \fBDeltaRad\fP (double ang1, double ang2)"
.br
.ti -1c
.RI "int \fBINTEGER\fP (const double a)"
.br
.ti -1c
.RI "double \fBDistance\fP (double x1, double y1, double x2, double y2)"
.br
.ti -1c
.RI "template<typename T > T \fBbound\fP (T x, T l, T u)"
.br
.in -1c
.SH "매크로 문서화"
.PP 
.SS "#define _DEG2RAD   (\fBM_PI\fP/180\&.)"

.PP
mm\&.h 파일의 9 번째 라인에서 정의되었습니다\&.
.SS "#define _RAD2DEG   (180\&./\fBM_PI\fP)"

.PP
mm\&.h 파일의 8 번째 라인에서 정의되었습니다\&.
.SS "#define M_PI   3\&.14159265358979323846"

.PP
mm\&.h 파일의 5 번째 라인에서 정의되었습니다\&.
.SH "함수 문서화"
.PP 
.SS "template<typename T > T bound (T x, T l, T u)\fC [inline]\fP"

.PP
mm\&.h 파일의 39 번째 라인에서 정의되었습니다\&.
.PP
.nf
40 {
41     if (x <= l) return l;
42     if (x >= u) return u;
43     return x;
44 }
.fi
.SS "double DeltaRad (double ang1, double ang2)\fC [inline]\fP"

.PP
mm\&.h 파일의 11 번째 라인에서 정의되었습니다\&.
.PP
.nf
12 {
13     double da = ang1 - ang2;
14     if (-M_PI < da && da < M_PI) return da;
15     else {
16         da = fmod (da, 2*M_PI);
17         if (M_PI <= da) return da - 2*M_PI;
18         else if (da <= -M_PI) return da + 2*M_PI;
19         else return da;
20     }
21     return da;
22 }
.fi
.SS "double Distance (double x1, double y1, double x2, double y2)\fC [inline]\fP"

.PP
mm\&.h 파일의 30 번째 라인에서 정의되었습니다\&.
.PP
.nf
31 {
32     double dx = x2 - x1;
33     double dy = y2 - y1;
34 
35     return sqrt (dx*dx + dy*dy);
36 }
.fi
.SS "int INTEGER (const double a)\fC [inline]\fP"

.PP
mm\&.h 파일의 24 번째 라인에서 정의되었습니다\&.
.PP
.nf
25 {
26     // return (long)floor (a + 0\&.5);
27     return (0 < a)? (int)(a + 0\&.5) : (int)(a - 0\&.5);
28 }
.fi
.SH "작성자"
.PP 
소스 코드로부터 Test를 위해 Doxygen에 의해 자동으로 생성됨\&.
